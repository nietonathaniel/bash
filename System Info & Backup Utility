#!/bin/bash
# =======================================
# System Info & Backup Utility Script
# Author: Nathaniel
# Description:
#   Gathers system info and creates backups
#   with proper logging and error handling.
# =======================================

set -euo pipefail
IFS=$'\n\t'

LOG_FILE="$HOME/backup_script.log"

# Log a message with timestamp
log() {
    local message="$1"
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $message" | tee -a "$LOG_FILE"
}

# Display system information
system_info() {
    log "Gathering system information..."
    echo "===== System Information ====="
    uname -a
    echo "Disk usage:"
    df -h
    echo "Memory usage:"
    free -h
    echo "Top 5 processes by memory:"
    ps aux --sort=-%mem | head -n 6
    log "System information gathered."
}

# Backup directory to specified backup location
backup_dir() {
    local src_dir="$1"
    local dest_dir="$2"
    
    if [[ ! -d "$src_dir" ]]; then
        log "ERROR: Source directory '$src_dir' does not exist."
        return 1
    fi
    
    mkdir -p "$dest_dir"
    local timestamp
    timestamp=$(date '+%Y%m%d_%H%M%S')
    local backup_file="$dest_dir/backup_${timestamp}.tar.gz"
    
    log "Starting backup of '$src_dir' to '$backup_file'..."
    
    if tar -czf "$backup_file" -C "$src_dir" .; then
        log "Backup successful: $backup_file"
    else
        log "ERROR: Backup failed."
        return 1
    fi
}

# Validate directory input
validate_directory() {
    local dir="$1"
    if [[ ! -d "$dir" ]]; then
        log "ERROR: Directory '$dir' not found."
        exit 1
    fi
}

# Main menu for user interaction
main_menu() {
    while true; do
        echo
        echo "====== Menu ======"
        echo "1) Show System Info"
        echo "2) Backup Directory"
        echo "3) Exit"
        echo -n "Choose an option [1-3]: "
        read -r choice
        
        case $choice in
            1)
                system_info
                ;;
            2)
                echo -n "Enter full path of directory to backup: "
                read -r src
                validate_directory "$src"
                echo -n "Enter backup destination directory: "
                read -r dest
                mkdir -p "$dest"
                backup_dir "$src" "$dest"
                ;;
            3)
                log "Exiting script."
                exit 0
                ;;
            *)
                echo "Invalid choice, try again."
                ;;
        esac
    done
}

# Run main menu
main_menu
